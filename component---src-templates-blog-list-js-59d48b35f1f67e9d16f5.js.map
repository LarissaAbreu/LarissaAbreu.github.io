{"version":3,"sources":["webpack:///./src/components/ListWrapper/styled.js","webpack:///./node_modules/styled-icons/boxicons-regular/Tag/Tag.esm.js","webpack:///./src/components/PostItem/styled.js","webpack:///./src/components/PostItem/index.js","webpack:///./src/components/Pagination/styled.js","webpack:///./src/components/Pagination/index.js","webpack:///./src/templates/blog-list.js"],"names":["ListWrapper","styled","section","ListWrapperContent","div","Tag","props","ref","iconAttrs","iconVerticalAlign","iconViewBox","d","key","displayName","PostItemLink","AniLink","PostItemWrapper","article","PostItemInfo","PostItemDate","time","PostItemTitle","h1","PostItemDescription","p","PostItemTagGroup","PostItemTagIcon","span","PostItemTagName","PostItem","slug","category","date","timeToRead","title","description","to","cover","direction","bg","getThemeColor","duration","PaginationWrapper","media","lessThan","Pagination","isFirst","isLast","currentPage","numPages","prevPage","nextPage","BlogList","postList","data","allMarkdownRemark","edges","pageContext","Layout","map","node","frontmatter","fields"],"mappings":"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","file":"component---src-templates-blog-list-js-59d48b35f1f67e9d16f5.js","sourcesContent":["import styled from 'styled-components';\n\nexport const ListWrapper = styled.section`\n  display: flex;\n  flex-direction: column;\n  align-items: center;\n`;\n\nexport const ListWrapperContent = styled.div`\n  width: 100%;\n  display: flex;\n  align-items: center;\n  text-align: left;\n  color: var(--texts);\n  flex-direction: column;\n\n  & h1 {\n    font-size: 64px;\n    margin: 35px 0;\n    font-family: 'Merienda One', cursive;\n  };\n\n  & p {\n    align-self: flex-start;\n    margin: 18px 0;\n    font-size: 18px;\n    line-height: 30px;\n    font-weight: 400;\n\n    & a {\n      border-bottom: 1px dashed var(--highlight);\n      color: var(--highlight);\n      text-decoration: none;\n      transition: opacity 0.5s;\n\n      &:hover {\n        opacity: 0.8;\n      };\n    };\n  };\n`;\n","import { __assign } from \"tslib\";\nimport * as React from 'react';\nimport { StyledIconBase } from '../../StyledIconBase';\nexport var Tag = React.forwardRef(function (props, ref) {\n  var attrs = {\n    \"fill\": \"currentColor\",\n    \"xmlns\": \"http://www.w3.org/2000/svg\"\n  };\n  return React.createElement(StyledIconBase, __assign({\n    iconAttrs: attrs,\n    iconVerticalAlign: \"middle\",\n    iconViewBox: \"0 0 24 24\"\n  }, props, {\n    ref: ref\n  }), React.createElement(\"path\", {\n    d: \"M20 4H8.515a2 2 0 00-1.627.838l-4.701 6.581a.997.997 0 000 1.162l4.701 6.581A2 2 0 008.515 20H20c1.103 0 2-.897 2-2V6c0-1.103-.897-2-2-2zm0 14H8.515l-4.286-6 4.286-6H20v12z\",\n    key: \"k0\"\n  }));\n});\nTag.displayName = 'Tag';\nexport var TagDimensions = {\n  height: 24,\n  width: 24\n};","import styled from 'styled-components';\nimport AniLink from 'gatsby-plugin-transition-link/AniLink';\n\nexport const PostItemLink = styled(AniLink)`\n  color: var(--texts);\n  display: flex;\n  text-decoration: none;\n  width: 100%;\n  max-width: 800px;\n  margin: 0 auto;\n\n  &:hover {\n    color: var(--highlight);\n  };\n`;\n\nexport const PostItemWrapper = styled.article`\n  align-items: center;\n  border: 1px dotted var(--borders);\n  border-radius: 4px;\n  box-shadow: 0 2px 2px 0 rgba(0, 0, 0, 0.14),\n              0 1px 5px 0 rgba(0, 0, 0, 0.12),\n              0 3px 1px -2px rgba(0, 0, 0, 0.2);\n  display: flex;\n  padding: 30px 20px;\n  width: 100%;\n  margin: 18px 0;\n\n  &:hover {\n    box-shadow: 0 2px 14px 0 var(--color-shadow),\n                0 1px 10px 0 var(--color-shadow),\n                0 3px 2px -2px var(--color-shadow);\n  };\n`;\n\nexport const PostItemInfo = styled.div`\n  display: flex;\n  flex-direction: column;\n  margin-left: 1.5rem;\n`;\n\nexport const PostItemDate = styled.time`\n  font-size: 1rem;\n`;\n\nexport const PostItemTitle = styled.h1`\n  font-size: 1.7rem;\n  font-weight: 700;\n  margin: 10px 0;\n`;\n\nexport const PostItemDescription = styled.p`\n  font-size: 1.3rem;\n`;\n\nexport const PostItemTagGroup = styled.div`\n  align-items: center;\n  display: flex;\n  font-size: 1rem;\n  font-weight: 300;\n  text-transform: lowercase;\n  margin-top: 20px;\n`;\n\nexport const PostItemTagIcon = styled.span`\n  width: 15px;\n  height: 15px;\n  margin-right: 7px;\n`;\n\nexport const PostItemTagName = styled.span`\n  font-weight: 300;\n  text-transform: lowercase;\n`;\n","import React from 'react';\nimport PropTypes from 'prop-types';\n\nimport getThemeColor from '../../utils/getThemeColor';\n\nimport { Tag } from 'styled-icons/boxicons-regular/Tag';\n\nimport * as S from './styled';\n\nconst PostItem = ({ slug, category, date, timeToRead, title, description }) => (\n  <S.PostItemLink\n    to={slug}\n    cover\n    direction=\"right\"\n    bg={getThemeColor()}\n    duration={0.6}\n    title={title}\n  >\n    <S.PostItemWrapper>\n      <S.PostItemInfo>\n        <S.PostItemDate>{date} • {timeToRead} min de leitura</S.PostItemDate>\n\n        <S.PostItemTitle>{title}</S.PostItemTitle>\n\n        <S.PostItemDescription>{description}</S.PostItemDescription>\n        <S.PostItemTagGroup>\n          <S.PostItemTagIcon>\n            <Tag />\n          </S.PostItemTagIcon>\n\n          <S.PostItemTagName>{category}</S.PostItemTagName>\n        </S.PostItemTagGroup>\n      </S.PostItemInfo>\n    </S.PostItemWrapper>\n  </S.PostItemLink>\n);\n\nPostItem.propTypes = {\n  slug: PropTypes.string.isRequired,\n  category: PropTypes.string.isRequired,\n  date: PropTypes.string.isRequired,\n  timeToRead: PropTypes.string.isRequired,\n  title: PropTypes.string.isRequired,\n  description: PropTypes.string.isRequired,\n};\n\nexport default PostItem;\n","import styled from 'styled-components';\nimport media from 'styled-media-query';\n\nexport const PaginationWrapper = styled.div`\n  align-items: center;\n  border-top: 1px solid var(--borders);\n  color: var(--texts);\n  display: flex;\n  padding: 16px 0;\n  justify-content: space-between;\n  margin: 0 auto;\n  margin-top: 16px;\n  max-width: 800px;\n\n  ${media.lessThan(\"large\")`\n    font-size: .8rem;\n    padding: 1rem;\n  `}\n\n  a {\n    color: var(--texts);\n    text-decoration: none;\n    transition: color 0.5s;\n\n    &:hover {\n      color: var(--highlight);\n    };\n  };\n`;\n","import React from 'react';\nimport propTypes from 'prop-types';\nimport AniLink from 'gatsby-plugin-transition-link/AniLink';\n\nimport getThemeColor from '../../utils/getThemeColor';\n\nimport * as S from './styled';\n\nconst Pagination = ({\n  isFirst,\n  isLast,\n  currentPage,\n  numPages,\n  prevPage,\n  nextPage\n}) => (\n  <S.PaginationWrapper>\n    {!isFirst &&\n      <AniLink\n        to={prevPage}\n        cover\n        direction=\"left\"\n        bg={getThemeColor()}\n        duration={0.6}\n      >\n        ← página anterior\n      </AniLink>\n    }\n\n    <p>{currentPage} de {numPages}</p>\n\n    {!isLast &&\n      <AniLink\n        to={nextPage}\n        cover\n        direction=\"right\"\n        bg={getThemeColor()}\n        duration={0.6}\n      >\n        próxima página →\n      </AniLink>\n    }\n  </S.PaginationWrapper>\n);\n\nPagination.propTypes = {\n  isFirst: propTypes.bool.isRequired,\n  isLast: propTypes.bool.isRequired,\n  currentPage: propTypes.number.isRequired,\n  numPages: propTypes.number.isRequired,\n  prevPage: propTypes.string,\n  nextPage: propTypes.string,\n};\n\nexport default Pagination;\n","import React from 'react';\nimport { graphql } from 'gatsby';\n\nimport Layout from '../components/Layout';\nimport SEO from '../components/seo';\nimport PostItem from '../components/PostItem';\nimport Pagination from '../components/Pagination';\n\nimport * as S from '../components/ListWrapper/styled';\n\nconst BlogList = props => {\n  const postList = props.data.allMarkdownRemark.edges;\n\n  const { currentPage, numPages } = props.pageContext;\n  const isFirst = currentPage === 1;\n  const isLast = currentPage === numPages;\n  const prevPage = currentPage - 1 === 1 ? '/' : `/page/${currentPage - 1}`;\n  const nextPage = `/page/${currentPage + 1}`;\n\n  return (\n    <Layout>\n      <SEO title=\"Blog\" />\n      <S.ListWrapper>\n        <S.ListWrapperContent>\n          <h1>Blog</h1>\n        </S.ListWrapperContent>\n        {postList.map(\n          ({\n          node: {\n            frontmatter: { category, date, description, title },\n            timeToRead,\n            fields: { slug }\n          },\n        }) => (\n          <PostItem\n            slug={slug}\n            category={category}\n            date={date}\n            timeToRead={timeToRead}\n            title={title}\n            description={description}\n          />\n        ))}\n      </S.ListWrapper>\n\n      <Pagination\n        isFirst={isFirst}\n        isLast={isLast}\n        currentPage={currentPage}\n        numPages={numPages}\n        prevPage={prevPage}\n        nextPage={nextPage}\n      />\n\n    </Layout>\n  );\n};\n\nexport const query = graphql`\n  query PostList($limit: Int!, $skip: Int!) {\n      allMarkdownRemark(\n        sort: {fields: frontmatter___date, order: DESC}\n        limit: $limit\n        skip: $skip\n      ) {\n        edges {\n          node {\n            fields{\n              slug\n            }\n            frontmatter {\n              category\n              date(locale: \"pt-br\", formatString: \"DD [de] MMMM [de] YYYY\")\n              description\n              title\n            }\n            timeToRead\n          }\n        }\n      }\n    }\n`;\n\nexport default BlogList;\n"],"sourceRoot":""}